type Query {
  categories: [Category!]!
  movies: [Movie!]!
  getMovieById(movieId: MovieId!): Movie!
}

type Category {
  name: String!
  description: String!
  _id: String!
}

type Movie {
  name: String!
  description: String!
  category: Category!
  cover: String!
  _id: String!
}

input MovieId {
  _id: String!
}

type Mutation {
  createCategory(categoryInput: CategoryInput!): Category!
  updateCategory(categoryInput: CategoryUpdateInput!): Category!
  createMovie(movieInput: MovieInput!): Movie!
  deleteMovie(movieId: MovieId!): Boolean!
  updateMovie(movieInput: UpdateMovieProps!, movieId: MovieId!): Movie!
}

input CategoryInput {
  description: String!
  name: String!
}

input CategoryUpdateInput {
  description: String
  name: String
  _id: String!
}

input MovieInput {
  description: String!
  name: String!
  cover: String!
  category: String
}

input UpdateMovieProps {
  description: String
  name: String
  cover: String
  category: String
}
